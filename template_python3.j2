{%- set SM = statemachine|upper -%}
{%- set sm = statemachine|lower -%}
# Generated by program
# pylint: disable=invalid-name
# pylint: disable=line-too-long
# pylint: disable=too-many-lines
# pylint: disable=too-many-locals
# pylint: disable=too-many-branches
# pylint: disable=too-many-statements
# pylint: disable=too-many-return-statements
# pylint: disable=missing-docstring
# pylint: disable=global-statement
# pylint: disable=unused-argument
class {{SM}}_FSM(object):
#
    # States
{%- for state in states|sort(case_sensitive=True) %}
    {{state}} = {{loop.index}}
{%- endfor %}
#
    # Events
{%- for event in events|sort(case_sensitive=True) %}
    {{event}} = {{loop.index}}
{%- endfor %}

    def __init__(self, initialState):
        self.this_state = initialState
        self.table = [{{1+states|count}}*[{{1+events|count}}*[]]]
        print(repr(self.this_state))
        print(repr(self.table))
{%- for action in actions|sort %}

    def {{action}}(self, event, eventContext):
        return None
{%- endfor %}

if __name__ == "__main__":
    test = {{SM}}_FSM(None)
# vi: ts=8 sts=4 sw=4 expandtab autoindent smartindent nocindent
