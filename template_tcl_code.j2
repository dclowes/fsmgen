{%- set SM = statemachine|upper -%}
{%- set sm = statemachine|lower -%}
{%- set BEGIN_CODE = '{' + '{' + '{' -%}
{%- set END_CODE = '}' + '}' + '}' -%}
# Generated by program
{%- for action in actions|sort(case_sensitive=True) %}
# Comments:
{%- for line in actions[action].comment %}
#    {{line}}
{%- endfor %}
proc {{action}} {context state event} {
  set catch_status [ catch {
    debug_log ${context} 1 "Action: {{action}} dev=${context}, state=${state}, event=${event}, sct=[sct]"
    set myResult {}
    # BEGIN CUSTOM: {{action}} action code {{BEGIN_CODE}}
{%- for code in code_blocks %}
{%- if action + " action code" == code %}
{%- for line in code_blocks[code] %}
{{line}}
{%- endfor %}
{%- endif %}
{%- endfor %}
    # END CUSTOM: {{action}} action code {{END_CODE}}
    return myResult
  } catch_message ]
  set tc_root ${context}
  handle_exception ${catch_status} ${catch_message}
}
{% endfor %}
# vim: ft=tcl ts=8 sts=4 sw=4 et nocindent
